<launch>

 <node pkg="tf" type="static_transform_publisher" name="world_to_cam"
    args="0.180 0 0.100 -1.57 0 -1.57 world camera 8" />
<!--         x y z yaw pitch roll frame_id child_frame_id period_in_ms-->

  <node ns="camera" pkg="image_proc" type="image_proc" name="image_proc"/>
  <arg name="device" default="/dev/video0"/>
  <node ns="camera" pkg="uvc_camera" type="uvc_camera_node" name="uvc_camera" output="screen">
    <param name="device" value="$(arg device)"/>
    <param name="width" type="int" value="640"/>
    <param name="height" type="int" value="480"/>
    <param name="fps" type="int" value="30"/>
    <param name="frame" type="string" value="camera"/>
    <param name="auto_focus" type="bool" value="False"/>
    <param name="focus_absolute" type="int" value="0"/>
    <param name="auto_white_balance" value="0"/>
    <param name="auto_exposure" value="0"/>
    <param name="brightness" value="120"/>
   <param name="camera_info_url" type="string" value="file://$(find uvc_camera)/config/camera_calibration.yaml" />
  </node>

  <node name="ar_pose" pkg="ar_pose" type="ar_single" respawn="false" output="screen">
    <param name="marker_pattern" type="string" value="$(find ar_pose)/data/4x4/4x4_55.patt"/>
    <param name="marker_width" type="double" value="40.0"/>
    <param name="marker_center_x" type="double" value="0.0"/>
    <param name="marker_center_y" type="double" value="0.0"/>
    <param name="threshold" type="int" value="100"/>
<!--   <param name="use_history" type="bool" value="true"/>-->
  </node>

  <!-- ar robotis pub -->
   <node name="ar_manipulator_demo" pkg="ar_pose" type="ar_manipulator_demo">
   </node>

</launch>
